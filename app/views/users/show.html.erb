<div class="main">
  <div class="inner">
    <div class="user__wrapper">
      <h2 class="page-heading">
              <%# <%= "ユーザー名さんの情報"%＃> %>
        <%= "#{@user.name}さんの情報"%>
      </h2>
      <table class="table">
        <tbody>
          <tr>
            <th class="table__col1">名前</th>
            <td class="table__col2"><%= @user.name %></td>
            <%# <td class="table__col2"><%= "ユーザー名" %#></td> %>
          </tr>
          <tr>
            <th class="table__col1">プロフィール</th>
            <td class="table__col2"><%= @user.profile %></td>
            <%# <td class="table__col2"><%= "ユーザーのプロフィール" %#></td> %>
            </tr>

          <tr>
            <th class="table__col1">所属</th>
            <td class="table__col2"><%= @user.occupation %></td>
                        <%# <td class="table__col2"><%= "ユーザーの所属" %#></td> %>
          </tr>
          <tr>
            <th class="table__col1">役職</th>
            <td class="table__col2"><%= @user.position%></td>
            <%# <td class="table__col2"><%= "ユーザーの役職" %#></td> %>
          </tr>
        </tbody>
      </table>
      <h2 class="page-heading">
        <%= "#{@user.name}名さんのプロトタイプ"%>
        <%# <%= "ユーザー名さんのプロトタイプ"%""> %>
      </h2>
      <div class="user__card">
        <%# 部分テンプレートでそのユーザーが投稿したプロトタイプ投稿一覧を表示する %>
          <%= render partial: 'prototypes/prototype', collection: @user.prototypes %>
          <%# 
          https://master.tech-camp.in/v2/curriculums/4762
           
           <div class="messages">
            <%= render partial: 'message', collection: @messages %#>
          </div>

          <%= form_with model: [@room, @message], class: 'form', local: true do |f| %#>
            <!-- 中略 -->
          <% end %#>
          このように記述することで、_message.html.erbを部分テンプレートとして、読み込むことができます。

          参考として、PicTweetでのツイート表示コードは下記でした。
          PicTweetではeachメソッドを使用していましたが、collectionオプションを使うことで1行で記述することもできます。
           
           


                   <%# 
         collectionコレクションオプション
          collectionオプションは、指定したインスタンス変数の中にある要素の数だけ、部分テンプレートを繰り返し呼び出すことができるオプションです。
          collectionオプションを使えば、繰り返し表示させたい要素がインスタンス変数に複数入っている場合でも、eachメソッドを使用せずにrenderで繰り返し表示できます。

          以下はcollectionオプションを使用しない場合のコード例です。

          【例】これまでに学習したコードの場合（@hogesには繰り返し表示させたい要素が複数入っている）

            <% @hoges.each do |hoge|%#>
              <%= render partial: 'hoge', locals: {hoge: hoge} %#>
            <% end %#>
            上記は以下の処理を行なっています。
            1. @hogesに入っている要素を、hogeとして1つ取り出す
            2. _hoge.html.erbという部分テンプレートを呼び出し、その部分テンプレート内では、取り出された1つのhogeという要素をhogeという名前で扱う設定をする
            3. eachメソッドを使用しているので、1~2を@hogesに入っている要素の数だけ繰り返し行う

            collectionオプションを使用すると、1行で同じ結果の処理を行うことができます。

            【例】collectionオプションを使用した場合（@hogesには繰り返し表示させたい要素が複数入っている）
            1
            <%= render partial: 'hoge', collection: @hoges %#>
            collectionオプションを使用する際のポイントとしては、複数要素が入っているインスタンス変数を、collectionオプションの対象に指定することです。
            また、collectionオプションを使用した場合、呼び出した部分テンプレート内では、インスタンス変数から取り出した要素を、部分テンプレート名と同じ変数名で扱うことができます。
            つまり、_hoge.html.erb内において、@hogesから取り出された1つ1つの要素はhogeとして扱うことができます。

            それでは、collectionオプションを使用する形へビューを編集しましょう
              
      
            partialで指定するファイルに/の記載があるものと無いものの違いにつきましては、以下の違いがございます。


              ■<%= render partial: '〇〇', collection:　〇〇 %#>（スラッシュがない場合）

              <%= render partial: '〇〇', collection:　〇〇 %#>が記載されているファイルと同じフォルダの同じ階層に、呼び出す部分テンプレートがある場合はスラッシュは不要です。


              ■<%= render partial: '□□/△△', collection:　△△ %#>（スラッシュがある場合）

              <%= render partial: '□□/△△', collection:　△△ %#>が記載されているファイルとは別のフォルダに存在する部分テンプレートを呼び出す場合にこのような書き方をします。
              （□□フォルダ内の_△△.html.erbを指定しています。）
           %>


      </div>
    </div>
  </div>
</div>